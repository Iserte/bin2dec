{"version":3,"sources":["GlobalStyle.js","pages/Bin2Dec/styles.js","utils/bin2dec.js","pages/Bin2Dec/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Form","styled","form","Title","h1","Input","input","Output","p","ErrorMessage","bin2dec","binaryNumber","reverseNumber","String","split","reverse","join","decimalNumber","i","number","push","Math","pow","reduce","previous","current","Bin2Dec","useState","setBinaryNumber","errorMessage","setErrorMessage","useEffect","document","getElementById","innerHTML","binaryConverter","errorOutput","style","display","autoComplete","onSubmit","e","preventDefault","id","type","placeholder","onChange","target","value","match","App","ReactDOM","render"],"mappings":"6iCAEA,IA8CeA,EA9CKC,YAAH,K,snBCAV,IAAMC,EAAOC,IAAOC,KAAV,KAQJC,EAAQF,IAAOG,GAAV,KAELC,EAAQJ,IAAOK,MAAV,KAILC,EAASN,IAAOO,EAAV,KAMNC,EAAeR,IAAOO,EAAV,KCTVE,MAbf,SAAiBC,GACb,IAAMC,EAAgBC,OAAOF,GAAcG,MAAM,IAAIC,UAAUC,KAAK,IAC9DC,EAAgB,GAEtB,IAAK,IAAMC,KAAKN,EAAe,CAC3B,IAAMO,EAASP,EAAcM,GAE7BD,EAAcG,KAAKC,KAAKC,IAAI,EAAGJ,GAAKC,GAGxC,OAAOF,EAAcM,QAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,IAAS,ICuC5DC,MA7Cf,WAAoB,IAAD,EAC2BC,mBAAS,GADpC,mBACPhB,EADO,KACOiB,EADP,OAE2BD,mBAAS,IAFpC,mBAEPE,EAFO,KAEOC,EAFP,KA8BjB,OA1BEC,qBAAU,WACgBC,SAASC,eAAe,kBAChCC,UAAYC,EAAgBxB,KAC3C,CAACA,IAEJoB,qBAAU,WACN,IAAMK,EAAcJ,SAASC,eAAe,gBACvB,KAAjBJ,GACAO,EAAYC,MAAMC,QAAU,SAC5BV,EAAgB,IAEhBQ,EAAYC,MAAMC,QAAU,SAEjC,CAACT,IAcJ,kBAAC7B,EAAD,CAAMuC,aAAa,MAAMC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBACtC,kBAACvC,EAAD,gBACA,kBAACE,EAAD,CACIsC,GAAG,eACHC,KAAK,OACLC,YAAY,eACZC,SAlBR,SAAsBL,GAClB,IAAM9B,EAAe8B,EAAEM,OAAOC,MAEQ,OAAlCrC,EAAasC,MAAM,YACnBrB,EAAgBjB,GAChBmB,EAAgB,KAEhBA,EAAgB,0BAapB,kBAACvB,EAAD,CAAQoC,GAAG,mBACX,kBAAClC,EAAD,CAAckC,GAAG,gBAAjB,yBC/BOO,MATf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJNC,IAASC,OAAO,kBAAC,EAAD,MAASpB,SAASC,eAAe,W","file":"static/js/main.ff63664b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    html, body {\r\n        margin: 0;\r\n        height: 100%;\r\n    }\r\n\r\n    body {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    input, button {\r\n        outline: none;\r\n        border-radius: 3px;\r\n        margin: 0 1em;\r\n        padding: 0.5em 1em;\r\n    }\r\n\r\n    input {\r\n        background: transparent;\r\n        border: 2px solid #55A;\r\n\r\n        &::placeholder {\r\n            color: #55A;\r\n            font-weight: bold;\r\n        }\r\n    }\r\n\r\n    p {\r\n        border-radius: 3px;\r\n        color: #fff;\r\n        font-weight: bold;\r\n        width: 100%;\r\n        text-align: center;\r\n        font-size: 16px;\r\n        padding: 0.5em 1em;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 300px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const Title = styled.h1``;\r\n\r\nexport const Input = styled.input`\r\n    width: 100%;\r\n`;\r\n\r\nexport const Output = styled.p`\r\n    background: #55A;\r\n    border: 2px solid #55A;\r\n    margin: 1em 0;\r\n`;\r\n\r\nexport const ErrorMessage = styled.p`\r\n    background: #F55;\r\n    border: 2px solid #F55;\r\n`;\r\n","function bin2dec(binaryNumber) {\r\n    const reverseNumber = String(binaryNumber).split(\"\").reverse().join(\"\");\r\n    const decimalNumber = [];\r\n\r\n    for (const i in reverseNumber) {\r\n        const number = reverseNumber[i];\r\n\r\n        decimalNumber.push(Math.pow(2, i) * number)\r\n    };\r\n    \r\n    return decimalNumber.reduce((previous, current) => previous + current, 0)\r\n}\r\n\r\nexport default bin2dec;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Title, Input, Output, ErrorMessage } from './styles';\r\nimport binaryConverter from '../../utils/bin2dec';\r\n\r\nfunction Bin2Dec() {\r\n    const [ binaryNumber, setBinaryNumber ] = useState(0);\r\n    const [ errorMessage, setErrorMessage ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const decimalOutput = document.getElementById(\"decimal-output\");\r\n        decimalOutput.innerHTML = binaryConverter(binaryNumber);\r\n    }, [binaryNumber]);\r\n\r\n    useEffect(() => {\r\n        const errorOutput = document.getElementById(\"error-output\");\r\n        if (errorMessage !== \"\") {\r\n            errorOutput.style.display = \"inline\";\r\n            setBinaryNumber(0);\r\n        } else {\r\n            errorOutput.style.display = \"none\";\r\n        }\r\n    }, [errorMessage])\r\n\r\n    function handleChange(e) {\r\n        const binaryNumber = e.target.value;\r\n\r\n        if (binaryNumber.match(/[^0-1]/g) === null) {\r\n            setBinaryNumber(binaryNumber);\r\n            setErrorMessage(\"\");\r\n        } else {\r\n            setErrorMessage(\"Not a binary number\");\r\n        }\r\n    }\r\n\r\n  return (\r\n    <Form autoComplete=\"off\" onSubmit={e => e.preventDefault()}>\r\n        <Title>Bin2Dec</Title>\r\n        <Input\r\n            id=\"binary-input\"\r\n            type=\"text\"\r\n            placeholder=\"Binary input\"\r\n            onChange={handleChange}\r\n        />\r\n        <Output id=\"decimal-output\"></Output>\r\n        <ErrorMessage id=\"error-output\">Not a binary number</ErrorMessage>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Bin2Dec;\r\n","import React from 'react';\r\nimport GlobalStyle from './GlobalStyle';\r\nimport Bin2Dec from './pages/Bin2Dec';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Bin2Dec />\r\n      <GlobalStyle />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}